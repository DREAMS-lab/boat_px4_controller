<?xml version="1.0"?>
<launch>

    <!-- MAVROS posix SITL environment launch script -->
    <!-- launches Gazebo environment and 2x: MAVROS, PX4 SITL, and spawns vehicle -->
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="boat"/>
    <arg name="world" default="$(find boat_px4_controller)/worlds/tempe.world"/>

    <!-- gazebo configs -->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>

    <!-- Gazebo sim -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
    </include>

    <!-- boat -->
    <group ns="boat">
        <!-- MAVROS and vehicle configs -->
        <arg name="ID" value="0"/>
        <arg name="fcu_url" default="udp://:14540@localhost:14580"/>
        <!-- PX4 SITL and vehicle spawn -->
        <include file="$(find boat_px4_controller)/launch/single_vehicle_spawn_sdf.launch">
            <arg name="x" value="0"/>
            <arg name="y" value="0"/>
            <arg name="z" value="0"/>
            <arg name="R" value="0"/>
            <arg name="P" value="0"/>
            <arg name="Y" value="0"/>
            <arg name="vehicle" value="$(arg vehicle)"/>
            <arg name="msdf" value="$(find boat_px4_controller)/models/heron/heron.sdf"/>
            <arg name="mavlink_udp_port" value="14560"/>
            <arg name="mavlink_tcp_port" value="4560"/>
            <arg name="ID" value="$(arg ID)"/>
        </include>
        <!-- MAVROS -->
        <include file="$(find mavros)/launch/px4.launch">
            <arg name="fcu_url" value="$(arg fcu_url)"/>
            <arg name="gcs_url" value=""/>
            <arg name="tgt_system" value="$(eval 1 + arg('ID'))"/>
            <arg name="tgt_component" value="1"/>
        </include>
    </group>

<!-- Connection to Unity3D -->
<!--     <arg name="port" default="9090" /> -->
<!--     <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"> -->
<!--         <arg name="port" value="9090" /> -->
<!--         <arg name="bson_only_mode" value="true"/> -->
<!--     </include> -->

    <!-- convert CompressedImage from Unity3D to image_raw -->
    <!-- rosrun image_transport republish compressed in:=/udrone/camera/front/rgb/ out:=/udrone/camera/front/image_raw/raw  _image_transport:=compressed -->
<!--     <node name="republish1" type="republish" pkg="image_transport" output="screen" args="_image_transport:=compressed in:=/udrone/camera/front/rgb/ raw out:=/udrone/camera/front/image_raw/raw" required="true" /> -->
<!--     <node name="republish2" type="republish" pkg="image_transport" output="screen" args="_image_transport:=compressed in:=/udrone/camera/down/rgb/ raw out:=/udrone/camera/down/image_raw/raw" required="true" /> -->
<!--     <node name="republish3" type="republish" pkg="image_transport" output="screen" args="_image_transport:=compressed in:=/udrone/camera/up/rgb/ raw out:=/udrone/camera/up/image_raw/raw" required="true" /> -->


</launch>
